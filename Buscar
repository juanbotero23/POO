package ProyectoFinalPOO;

import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;

public class Buscar implements ActionListener{

	JFrame frame;
	JTextField buscador, nuevoserial;
	JButton botonBuscar, botonEliminar, botonEditar;
	JPanel panel;
	JLabel nombre, id, serial;
	

	public Buscar()
		{
			buscador = new JTextField();
			buscador.setBounds(75, 25, 125, 50);
			
			botonBuscar = new JButton("BUSCAR");
			botonBuscar.setBounds(200, 25, 100, 50);
			botonBuscar.addActionListener(this);
			
			panel = new JPanel();
			panel.setBackground(Color.black);
			panel.setBounds(75, 100, 225, 125);
			panel.setLayout(new GridLayout(3,1));
			
			nombre = new JLabel();
			nombre.setHorizontalAlignment(JLabel.CENTER);
			nombre.setForeground(Color.WHITE);
			panel.add(nombre);
			
			id = new JLabel();
			id.setHorizontalAlignment(JLabel.CENTER);
			id.setForeground(Color.WHITE);
			panel.add(id);
			
			serial = new JLabel();
			serial.setHorizontalAlignment(JLabel.CENTER);
			serial.setForeground(Color.WHITE);
			panel.add(serial);
			
			botonEliminar = new JButton("ELIMINAR MAQUINARIA");
			botonEliminar.setBounds(75, 235, 225, 50);
			botonEliminar.addActionListener(this);
			
			botonEditar = new JButton("EDITAR SERIAL");
			botonEditar.setBounds(75, 290, 175, 50);
			botonEditar.addActionListener(this);
			
			nuevoserial = new JTextField();
			nuevoserial.setBounds(250, 290, 50, 50);

			frame = new JFrame("Listado de serial");
			frame.setVisible(true);
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			frame.setSize(400,400);
			frame.setResizable(true);
			frame.setLayout(null);
			frame.add(buscador);
			frame.add(botonBuscar);
			frame.add(panel);
			frame.add(botonEliminar);
			frame.add(botonEditar);
			frame.add(nuevoserial);
		}

		@Override
		public void actionPerformed(ActionEvent e) 
		{
			String dato = buscador.getText();
			 
			if (e.getSource() == botonBuscar)
			{
				try 
				{
					Connection driver = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ListadePOO", "postgres", "12bote34");
					Statement consulta = driver.createStatement();
					ResultSet resultSet = consulta.executeQuery("SELECT * FROM serial");
					
					while (resultSet.next())
					{
						if (resultSet.getString("id").equals(dato))
						{

							nombre.setText("Nombre -> " + resultSet.getString("nombre"));
							id.setText("ID -> " + resultSet.getString("idmaquinaria"));
							serial.setText ("Serial -> " + resultSet.getString("serial"));	
						}
					}
				} 
				catch (SQLException e1) 
				{
					e1.printStackTrace();
				} 
			}
			
			if (e.getSource() == botonEliminar)
			{
				try 
				{
					Connection driver = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ListadePOO", "postgres", "12bote34");
					Statement actualizacion = driver.createStatement();
					actualizacion.executeUpdate("DELETE FROM serial WHERE id='"+dato+"'");
					frame.dispose();
					new Menu();
				} 
				catch (SQLException e1) 
				{
					e1.printStackTrace();
				}
			}
			
			if (e.getSource() == botonEditar)
			{
				try 
				{
					Connection driver = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ListadePOO", "postgres", "12bote34");
					Statement actualizacion = driver.createStatement();
					actualizacion.executeUpdate("UPDATE serial SET serial="+nuevoserial.getText()+
												"WHERE id='"+dato+"'");
					frame.dispose();
					new Menu();
				} 
				catch (SQLException e1) 
				{
					e1.printStackTrace();
				}
			}
		}
}
